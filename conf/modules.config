/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    modules {
        'fastqc' {
            args          = "--quiet"
            publish_files = ['html':'']
        }
        'multiqc' {
            args          = ""
            publish_dir   = "multiqc"
        }
        'cutadapt' {
            args          = "--minimum-length 1"
            suffix        = ".trimmed"
            publish_files = ['log':'']
        }
        'cutadapt_readthrough' {
            args          = "--minimum-length 1"
            suffix   = ".read-through"
            publish_files = ['log':'']
        }
        'cutadapt_doubleprimer' {
            args          = "--discard-trimmed --minimum-length 1"
            suffix        = ".double-primer"
            publish_files = ['log':'']
        }
        'cutadapt_summary' {
            publish_files = false
        }
        'cutadapt_summary_merge' {
            publish_files = null
        }
        'cutadapt_taxonomy' {
            args          = "--discard-untrimmed --minimum-length 1"
            publish_files = ['log':'']
        }
        'dada2_quality' {
            args          = "5e+06"
            publish_files = ['pdf':'QC','.args.txt':'args']
        }
        'dada2_filtntrim' {
            args          = 'maxN = 0, truncQ = 2, trimRight = 0, minQ = 0, rm.lowcomplex = 0, orient.fwd = NULL, matchIDs = FALSE, id.sep = "\\\\s", id.field = NULL, n = 1e+05, OMP = TRUE, qualityType = "Auto"'
            publish_files = ['.args.txt':'args']
        }
        'dada2_err' {
            args          = 'nbases = 1e8, nreads = NULL, randomize = FALSE, MAX_CONSIST = 10, OMEGA_C = 0, qualityType = "Auto"'
            publish_files = ['pdf':'QC','.args.txt':'args','convergence.txt':'QC','log':'log']
        }
        'dada2_denoising' {
            // standard setting can be inspected with getDadaOpt(option = NULL)
            args          = 'selfConsist = FALSE, priors = character(0), DETECT_SINGLETONS = FALSE, GAPLESS = TRUE, GAP_PENALTY = -8, GREEDY = TRUE, KDIST_CUTOFF = 0.42, MATCH = 5, MAX_CLUST = 0, MAX_CONSIST = 10, MIN_ABUNDANCE = 1, MIN_FOLD = 1, MIN_HAMMING = 1, MISMATCH = -4, OMEGA_A = 1e-40, OMEGA_C = 1e-40, OMEGA_P = 1e-4, PSEUDO_ABUNDANCE = Inf, PSEUDO_PREVALENCE = 2, SSE = 2, USE_KMERS = TRUE, USE_QUALS = TRUE, VECTORIZED_ALIGNMENT = TRUE'
            // setting from https://rdrr.io/bioc/dada2/man/mergePairs.html & https://rdrr.io/bioc/dada2/man/nwalign.html & match = getDadaOpt("MATCH"), mismatch = getDadaOpt("MISMATCH"), gap = getDadaOpt("GAP_PENALTY"), missing from the list below is: 'band = -1'
            args2         = 'minOverlap = 12, maxMismatch = 0, returnRejects = FALSE, propagateCol = character(0), trimOverhang = FALSE, match = 1, mismatch = -64, gap = -64, homo_gap = NULL, endsfree = TRUE, vec = FALSE'
            publish_files = ['.args.txt':'args','log':'log']
        }
        'dada2_rmchimera' {
            args          = 'method="consensus", minSampleFraction = 0.9, ignoreNNegatives = 1, minFoldParentOverAbundance = 2, minParentAbundance = 8, allowOneOff = FALSE, minOneOffParentDistance = 4, maxShift = 16'
            publish_files = ['.args.txt':'args']
        }
        'dada2_stats' {
            publish_files = false
        }
        'dada2_merge' {
            publish_files = null
        }
        'merge_stats' {
            publish_dir = './'
            publish_files = null
        }
        'itsx_cutasv' {
            args = '-t all --preserve T --date F --positions F --graphical F --save_regions none'
        }
        'format_taxonomy' {
            publish_dir = 'dada2'
            publish_files = ['ref_taxonomy.txt':'']
        }
        'dada2_taxonomy' {
            args          = 'minBoot = 50'
            publish_files = ['.args.txt':'args','tsv':'']
        }
        'dada2_addspecies' {
            args          = 'allowMultiple = FALSE, n = 1e5'
            publish_files = ['.args.txt':'args','tsv':'']
        }
        'format_taxonomy_qiime' {
            publish_dir = 'qiime2/taxonomy'
            publish_files = ['ref_taxonomy.txt':'']
        }
        'qiime2_preptax' {
            args          = ""
            publish_dir = 'qiime2/taxonomy'
            publish_files = ['-classifier.qza':'','tsv':'']
        }
        'qiime2_taxonomy' {
            args          = ""
            publish_dir = 'qiime2/taxonomy'
            publish_files = ['tsv':'']
        }
        'qiime2_inasv' {
            args          = ""
            publish_files = false
        }
        'qiime2_inseq' {
            args          = ""
            publish_files = false
        }
        'qiime2_filtertaxa' {
            args          = ""
            publish_files = false
        }
        'filter_stats' {
            args          = ""
            publish_dir = 'qiime2/abundance_tables'
            publish_files = ['tsv':'']
        }
        'qiime2_barplot' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = null
        }
        'qiime2_export_absolute' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = ['descriptive_stats.tsv':'representative_sequences','seven_number_summary.tsv':'representative_sequences','tsv':'abundance_tables','biom':'abundance_tables','rep-seq.fasta':'representative_sequences']
        }
        'qiime2_export_relasv' {
            args          = ""
            publish_dir = 'qiime2/rel_abundance_tables'
            publish_files = ['tsv':'']
        }
        'qiime2_export_reltax' {
            args          = ""
            publish_dir = 'qiime2/rel_abundance_tables'
            publish_files = ['tsv':'']
        }
        'combine_table' {
            args          = ""
            publish_dir = 'qiime2/rel_abundance_tables'
            publish_files = ['tsv':'']
        }
        'qiime2_tree' {
            args          = ""
            publish_dir = 'qiime2/phylogenetic_tree'
            publish_files = null
        }
        'qiime2_alphararefaction' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = null
        }
        'qiime2_diversity_core' {
            args          = ""
            publish_dir = 'qiime2/diversity'
            publish_files = ['rarefaction.txt':'']
        }
        'qiime2_diversity_alpha' {
            args          = ""
            publish_dir = 'qiime2/diversity'
            publish_files = null
        }
        'qiime2_diversity_beta' {
            args          = ""
            publish_dir = 'qiime2/diversity'
            publish_files = null
        }
        'qiime2_diversity_betaord' {
            args          = ""
            publish_dir = 'qiime2/diversity'
            publish_files = null
        }
        'qiime2_filterasv' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = false
        }
        'qiime2_ancom_tax' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = null
        }
        'qiime2_ancom_asv' {
            args          = ""
            publish_dir = 'qiime2'
            publish_files = null
        }
        'qiime2_intax' {
            args          = ""
            publish_files = false
        }
        'picrust' {
            args          = "-t epa-ng --remove_intermediate"
            publish_files = null
        }
        'sbdiexport' {
            args          = ""
            publish_files = null
        }
        'sbdiexportreannotate' {
            args          = ""
            publish_files = null
        }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}
