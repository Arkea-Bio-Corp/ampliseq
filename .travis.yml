sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true

before_install:
  # PRs to master are only ok if coming from dev branch
  - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && [ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ])'
  # Pull the docker image first so the test doesn't wait for this
  - docker pull nfcore/ampliseq:dev
  # Fake the tag locally so that the pipeline runs properly
  - docker tag nfcore/ampliseq:dev nfcore/ampliseq:1.0.0

install:
  # Install Nextflow
  - mkdir /tmp/nextflow
  - cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Install nf-core/tools
  - git clone https://github.com/nf-core/tools.git /tmp/nf-core-tools
  - cd /tmp/nf-core-tools
  - pip install --upgrade pip
  - pip install .
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests
  - cd ${TRAVIS_BUILD_DIR}/tests

env:
  - NXF_VER=18.10.1 # Specify a minimum NF version that should be tested and work
  - NXF_VER='' # Plus: get the latest NF version and check, that it works

script:
  # Lint the pipeline code
  - nf-core lint ${TRAVIS_BUILD_DIR}
  # Run the pipeline with the test profile
  - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker
  # Run the pipeline with the test profile for multip√ºle sequencing runs
  - |
    mkdir testmulti
    mkdir testmulti/run1
    mkdir testmulti/run2
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/1_S103_L001_R1_001.fastq.gz -O testmulti/run1/1_S103_L001_R1_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/1_S103_L001_R2_001.fastq.gz -O testmulti/run1/1_S103_L001_R2_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/1a_S103_L001_R1_001.fastq.gz -O testmulti/run1/1a_S103_L001_R1_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/1a_S103_L001_R1_001.fastq.gz -O testmulti/run1/1a_S103_L001_R2_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/2_S115_L001_R1_001.fastq.gz -O testmulti/run2/2_S115_L001_R1_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/2_S115_L001_R2_001.fastq.gz -O testmulti/run2/2_S115_L001_R2_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/2a_S115_L001_R1_001.fastq.gz -O testmulti/run2/2a_S115_L001_R1_001.fastq.gz
    wget https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/2a_S115_L001_R2_001.fastq.gz -O testmulti/run2/2a_S115_L001_R2_001.fastq.gz
  - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker --multipleSequencingRuns --reads "testmulti" --metadata "https://github.com/d4straub/test-datasets/raw/ampliseq/testdata/Metadata_multi.tsv"
  #- nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker --multipleSequencingRuns --reads "testmulti" --metadata "https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/Metadata_multi.tsv"
