{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/ampliseq/master/nextflow_schema.json",
    "title": "nf-core/ampliseq pipeline parameters",
    "description": "16S rRNA amplicon sequencing analysis workflow using QIIME2",
    "type": "object",
    "definitions": {
        "main_arguments": {
            "title": "Main arguments",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Folder containing paired-end demultiplexed FastQ files",
                    "help_text": "Use this to specify the location of your input FastQ files. For example:\n\n```bash\n--input 'path/to/data/sample_*_{1,2}.fastq'\n```\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The path must have at least one `*` wildcard character\n3. When using the pipeline with paired end data, the path must use `{1,2}` notation to specify read pairs.\n\nIf left unspecified, a default pattern is used: `data/*{1,2}.fastq.gz`"
                },
                "FW_primer": {
                    "type": "string",
                    "description": "Forward primer sequence"
                },
                "RV_primer": {
                    "type": "string",
                    "description": "Reverse primer sequence"
                },
                "metadata": {
                    "type": "string",
                    "description": "Path to metadata sheet, when missing most downstream analysis are skipped (barplots, PCoA plots, ...)."
                },
                "multipleSequencingRuns": {
                    "type": "boolean",
                    "description": "If samples were sequenced in multiple sequencing runs. Expects one subfolder per sequencing run in the folder specified by \"--input\" containing sequencing data of the specific run. These folders may not contain underscores. Also, fastQC is skipped because multiple sequencing runs might create overlapping file names that crash MultiQC."
                },
                "manifest": {
                    "type": "string",
                    "description": "Path to tab seperated table with the following labels in this exact order: sampleID, forwardReads, reverseReads. Multiple sequencing runs not supported by manifest at this stage."
                }
            },
            "required": [
                "input",
                "FW_primer",
                "RV_primer"
            ],
            "fa_icon": "fas fa-terminal"
        },
        "cutoffs": {
            "title": "Cutoffs",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "retain_untrimmed": {
                    "type": "boolean",
                    "description": "Cutadapt will retain untrimmed reads, choose only if input reads are not expected to contain primer sequences."
                },
                "trunclenf": {
                    "type": "integer",
                    "description": "DADA2 read truncation value for forward strand"
                },
                "trunclenr": {
                    "type": "integer",
                    "description": "DADA2 read truncation value for reverse strand"
                },
                "trunc_qmin": {
                    "type": "integer",
                    "default": 25,
                    "description": "If --trunclenf and --trunclenr are not set, these values will be automatically determined using this mean quality score"
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "taxonomic_database": {
            "title": "Taxonomic database",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "reference_database": {
                    "type": "string",
                    "default": "https://www.arb-silva.de/fileadmin/silva_databases/qiime/Silva_132_release.zip",
                    "description": "Path to the qiime compatible file Silva_132_release.zip"
                },
                "classifier": {
                    "type": "string",
                    "description": "Path to QIIME2 trained classifier file (typically *-classifier.qza)"
                },
                "classifier_removeHash": {
                    "type": "boolean",
                    "description": "Remove all hash signs from taxonomy strings, resolves a rare ValueError during classification (process classifier)"
                },
                "dereplication": {
                    "type": "integer",
                    "default": 99,
                    "description": "Dereplication version of the database. Must be currently SILVA v132 and its subfolders. Database size is descreasing, but taxonomical assignments as well.",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-database"
        },
        "filtering": {
            "title": "Filtering",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "exclude_taxa": {
                    "type": "string",
                    "default": "mitochondria,chloroplast",
                    "description": "Comma separated list of unwanted taxa, to skip taxa filtering use \"none\""
                },
                "min_frequency": {
                    "type": "integer",
                    "default": "1",
                    "description": "Remove entries from the feature table below an absolute abundance threshold"
                },
                "min_samples": {
                    "type": "integer",
                    "default": "1",
                    "description": "Filtering low prevalent features from the feature table"
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "other_input_output_options": {
            "title": "Other input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "readPaths": {
                    "type": "string",
                    "hidden": true,
                    "description": "Path to test sequencing read files"
                },
                "metadata_category": {
                    "type": "string",
                    "description": "Comma separated list of metadata column headers for statistics. If not specified, all suitable columns in the metadata sheet will be used. Suitable are columns which are categorical (not numerical) and have multiple different values that are not all unique."
                },
                "phred64": {
                    "type": "boolean",
                    "description": "If the sequencing data has PHRED 64 encoded quality scores, otherwise PHRED 33 is assumed"
                },
                "split": {
                    "type": "string",
                    "default": "-",
                    "description": "A string that will be used between the prepended run/folder name and the sample name. May not be present in run/folder names and no underscore(s) allowed. Only used with \"--multipleSequencingRuns\"."
                },
                "extension": {
                    "type": "string",
                    "default": "/*_R{1,2}_001.fastq.gz",
                    "description": "Naming of sequencing files. The prepended \"/\" is required, also one \"*\" is required for sample names and \"{1,2}\" indicates read orientation."
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "qiime_timezone": {
                    "type": "string",
                    "default": "Europe/Berlin",
                    "description": "Needs to be specified to resolve a timezone error"
                },
                "keepIntermediates": {
                    "type": "boolean",
                    "description": "Keep additional intermediate files, such as trimmed reads or various QIIME2 archives"
                }
            }
        },
        "run_only_partial_workflow": {
            "title": "Run only partial workflow",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "untilQ2import": {
                    "type": "boolean",
                    "description": "Skip all steps after importing into QIIME2, used for visually choosing DADA2 parameter"
                },
                "Q2imported": {
                    "type": "string",
                    "description": "Path to imported reads (e.g. \"demux.qza\"), used after visually choosing DADA2 parameter"
                },
                "onlyDenoising": {
                    "type": "boolean",
                    "description": "Skip all steps after denoising, produce only sequences and abundance tables on ASV level"
                }
            }
        },
        "skipping_specific_steps": {
            "title": "Skipping specific steps",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "Skip FastQC"
                },
                "skip_alpha_rarefaction": {
                    "type": "boolean",
                    "description": "Skip alpha rarefaction"
                },
                "skip_barplot": {
                    "type": "boolean",
                    "description": "Skip producing barplot"
                },
                "skip_taxonomy": {
                    "type": "boolean",
                    "description": "Skip taxonomic classification"
                },
                "skip_abundance_tables": {
                    "type": "boolean",
                    "description": "Skip producing any relative abundance tables"
                },
                "skip_diversity_indices": {
                    "type": "boolean",
                    "description": "Skip alpha and beta diversity analysis"
                },
                "skip_ancom": {
                    "type": "boolean",
                    "description": "Skip differential abundance testing"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "description": "Skip MultiQC reporting"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "mov"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Workflow name.",
                    "fa_icon": "fas fa-fingerprint",
                    "help_text": "A custom name for the pipeline run. Unlike the core nextflow `-name` option with one hyphen this parameter can be reused multiple times, for example if using `-resume`. Passed through to steps such as MultiQC and used for things like report filenames and titles."
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "fa_icon": "fas fa-users-cog"
                },
                "clusterOptions": {
                    "type": "string",
                    "hidden": true
                }
            }
        },
        "other_options": {
            "title": "Other options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "awsregion": {
                    "type": "string",
                    "default": "eu-west-1"
                },
                "awsqueue": {
                    "type": "string"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/main_arguments"
        },
        {
            "$ref": "#/definitions/cutoffs"
        },
        {
            "$ref": "#/definitions/taxonomic_database"
        },
        {
            "$ref": "#/definitions/filtering"
        },
        {
            "$ref": "#/definitions/other_input_output_options"
        },
        {
            "$ref": "#/definitions/run_only_partial_workflow"
        },
        {
            "$ref": "#/definitions/skipping_specific_steps"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/other_options"
        }
    ]
}
