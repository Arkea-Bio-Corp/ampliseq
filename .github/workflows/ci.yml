# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
name: nf-core CI
on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev", "master"]
  release:
    types: [published]

# Setting environment variable for Nextflow logs
env:
  NXF_ANSI_LOG: false

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

  # Define the jobs to be run in parallel
jobs:
  test-dev:
    # Only run this job if the base branch is 'dev' or if a push event is triggered
    if: ${{ (github.base_ref == 'dev' || (github.event_name == 'push')) && !contains(github.event.head_commit.message, '[ci skip]') }}
    name: Run pipeline with test data on dev
    runs-on: ubuntu-latest
    # Define the matrix strategy for the job
    strategy:
      matrix:
        NXF_VER: ["latest-everything"]
        NFTEST_VER: ["0.7.3"]
        profile: ["docker"]
        aligner: ["paired_end", "single_end", "misc"]

    # Define the steps for the job
    steps:
      # Checkout the pipeline code from the repository
      - name: Check out pipeline code
        uses: actions/checkout@v3

      - name: Hash Github Workspace
        id: hash_workspace
        run: |
          echo "digest=$(echo ampliseq_2.6_${{ github.workspace }} | md5sum | cut -c 1-25)" >> $GITHUB_OUTPUT

      - name: Cache test data
        id: cache-testdata
        uses: actions/cache@v3
        with:
          path: test-datasets/
          key: ${{ steps.hash_workspace.outputs.digest }}

      - name: Check out test data
        if: steps.cache-testdata.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: ampliseq
          path: test-datasets/

      - name: Replace remote paths in samplesheets
        run: |
          for f in ${{ github.workspace }}/test-datasets/samplesheets/*.tsv; do
            sed -i "s=https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/=${{ github.workspace }}/test-datasets/=g" $f
            echo "========== $f ============"
            cat $f
            echo "========================================"
          done;

      # Install the specified version of Nextflow
      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      # Install nf-test
      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash -s ${{ matrix.NFTEST_VER }}
          sudo mv nf-test /usr/local/bin/

      # Run nf-test with the specified aligner and output test results in TAP format
      - name: Run nf-test
        run: |
          nf-test test tests/pipeline/${{ matrix.aligner }}/ --tap=test.tap

      # If the test fails, output the software_versions.yml using the 'batcat' utility
      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always ${{ github.workspace }}/.nf-test/tests/*/output/pipeline_info/software_versions.yml

      # Comment on the PR with the test results
      - name: PR comment with file
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: test.tap

  test-master:
    # Only run this job if the base branch is 'master'
    if: ${{ (github.base_ref == 'master') }}
    name: Run pipeline with test data on master
    runs-on: ubuntu-latest
    # Define the matrix strategy for the job
    strategy:
      matrix:
        NXF_VER: ["22.10.1", "latest-everything"]
        NFTEST_VER: ["0.7.3"]
        profile: ["docker"]
        aligner: ["paired_end", "single_end", "misc"]

    # Define the steps for the job
    steps:
      # Checkout the pipeline code from the repository
      - name: Check out pipeline code
        uses: actions/checkout@v3

      - name: Hash Github Workspace
        id: hash_workspace
        run: |
          echo "digest=$(echo ampliseq_2.6_${{ github.workspace }} | md5sum | cut -c 1-25)" >> $GITHUB_OUTPUT

      - name: Cache test data
        id: cache-testdata
        uses: actions/cache@v3
        with:
          path: test-datasets/
          key: ${{ steps.hash_workspace.outputs.digest }}

      - name: Check out test data
        if: steps.cache-testdata.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: ampliseq
          path: test-datasets/

      - name: Replace remote paths in samplesheets
        run: |
          for f in ${{ github.workspace }}/test-datasets/samplesheets/*.tsv; do
            sed -i "s=https://github.com/nf-core/test-datasets/raw/ampliseq/testdata/=${{ github.workspace }}/test-datasets/=g" $f
            echo "========== $f ============"
            cat $f
            echo "========================================"
          done;

      # Install the specified version of Nextflow
      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      # Install nf-test
      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash -s ${{ matrix.NFTEST_VER }}
          sudo mv nf-test /usr/local/bin/

      # Run nf-test with the specified aligner and output test results in TAP format
      - name: Run nf-test
        run: |
          nf-test test tests/pipeline/${{ matrix.aligner }}/ --tap=test.tap

      # If the test fails, output the software_versions.yml using the 'batcat' utility
      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always ${{ github.workspace }}/.nf-test/tests/*/output/pipeline_info/software_versions.yml

      # Comment on the PR with the test results
      - name: PR comment with file
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: test.tap
